# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: test_and_release

on: [ push, pull_request]

permissions:
  checks: write

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.x']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build
      run: |
        poetry build
    - name: Store distribution packages
      uses: actions/upload-artifact@v4
      continue-on-error: true   # Not sure what else to do, given this change in v4 (https://github.com/actions/upload-artifact?tab=readme-ov-file#not-uploading-to-the-same-artifact)
      with:
        name: dist
        path: dist/

#  test:
#
#    runs-on: ubuntu-latest
#    needs: build
#    strategy:
#      matrix:
#        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.x']
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python
#      uses: actions/setup-python@v3
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip setuptools
#        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
#        sudo apt update
#        sudo apt install -qq openjdk-11-jre  # JDK is needed to run tests
#    - name: Test
#      run: |
#        python setup.py build
#        nose2 -v --pretty-assert --plugin nose2.plugins.junitxml --junit-xml
#    - name: Publish Test Report
#      uses: mikepenz/action-junit-report@v3
#      if: success() || failure()  # always run
#      with:
#        report_paths: 'nose2-junit.xml'

  # https://github.com/actions/starter-workflows/blob/main/ci/python-publish.yml
  release:

    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    environment:
      name: pypi
      url: https://pypi.org/p/eNGame
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
     id-token: write
    steps:
    - name: Download distribution packages
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    - name: Deploy to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
